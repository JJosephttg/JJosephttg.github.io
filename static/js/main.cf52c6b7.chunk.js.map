{"version":3,"sources":["components/NavigationItem/NavigationItem.module.css","components/ProfileLogo/ProfileLogo.module.css","assets/PortfolioSelfPic.jpg","App.module.css","components/NavigationItem/NavigationItem.js","components/VerticalNavigationBar/VerticalNavigationBar.js","components/ProfileLogo/ProfileLogo.js","containers/AboutPage/AboutPage.js","App.js","serviceWorker.js","index.js","containers/AboutPage/AboutPage.module.css","components/VerticalNavigationBar/VerticalNavigationBar.module.css"],"names":["module","exports","withRouter","props","navItemStyle","styles","NavItem","location","pathname","link","push","CurrentPage","style","textDecoration","to","className","join","NavItemImage","iconType","NavText","itemName","VerticalNavigationBar","NavigationContainer","MenuButtonContainer","MenuButton","width","height","OutlineCircle","r","cx","cy","fill","ProgressCircle","NavigationDivider","ProfileLogo","sizeStyle","size","backgroundImage","source","LogoImage","AboutPage","_","useState","currentText","setCurrentText","wordDescDict","Adaptable","Efficient","Passionate","letterClickHandler","word","SelfPicture","profilePicture","Title","Letter","onClick","Divider","Description","app","App","path","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,QAAU,gCAAgC,YAAc,oCAAoC,QAAU,gCAAgC,aAAe,uC,mBCAvKD,EAAOC,QAAU,CAAC,UAAY,iC,mBCD9BD,EAAOC,QAAU,IAA0B,8C,mBCC3CD,EAAOC,QAAU,CAAC,IAAM,mB,6KCiBTC,eAbQ,SAAAC,GACnB,IAAIC,EAAe,CAACC,IAAOC,SAE3B,OADGH,EAAMI,SAASC,WAAaL,EAAMM,MAAML,EAAaM,KAAKL,IAAOM,aAEhE,kBAAC,IAAD,CAAMC,MAAO,CAAEC,eAAgB,QAASC,GAAIX,EAAMM,MAC9C,yBAAKM,UAAWX,EAAaY,KAAK,MAC9B,uBAAGD,UAAW,CAAC,iBAAkBV,IAAOY,cAAcD,KAAK,MAAOb,EAAMe,UACxE,uBAAGH,UAAWV,IAAOc,SAAUhB,EAAMiB,e,gBCYtCC,EAlBe,SAAAlB,GAC1B,OACI,yBAAKY,UAAWV,IAAOiB,qBACnB,yBAAKP,UAAWV,IAAOkB,qBACnB,uBAAGR,UAAW,CAAC,iBAAkBV,IAAOmB,YAAYR,KAAK,MAAzD,QACA,yBAAKS,MAAM,KAAKC,OAAO,MACnB,4BAAQX,UAAWV,IAAOsB,cAAeC,EAAE,KAAKC,GAAG,KAAKC,GAAG,KAAKC,KAAK,gBACrE,4BAAQhB,UAAWV,IAAO2B,eAAgBJ,EAAE,KAAKC,GAAG,KAAKC,GAAG,KAAKC,KAAK,kBAG9E,yBAAKhB,UAAWV,IAAO4B,oBACvB,kBAAC,EAAD,CAAgBf,SAAS,gBAAgBE,SAAS,QAAQX,KAAK,MAC/D,kBAAC,EAAD,CAAgBS,SAAS,aAAaE,SAAS,OAAOX,KAAK,UAC3D,kBAAC,EAAD,CAAgBS,SAAS,gBAAgBE,SAAS,UAAUX,KAAK,e,yBCH9DyB,EAZK,SAAA/B,GAChB,IAAMgC,EAAY,CACdT,OAAQvB,EAAMiC,KACdX,MAAOtB,EAAMiC,KACbC,gBAAgB,OAAD,OAASlC,EAAMmC,OAAf,MAGnB,OACI,yBAAKvB,UAAW,CAACV,IAAOkC,UAAWpC,EAAMY,WAAWC,KAAK,KAAMJ,MAAOuB,K,iCCiC/DK,EArCG,SAAAC,GAAM,IAAD,EACmBC,mBAAS,sFAD5B,mBACZC,EADY,KACCC,EADD,KAGbC,EAAe,CACjBC,UAAU,wVAIVC,UAAU,sTAGVC,WAAW,gKAITC,EAAqB,SAACC,GACxBN,EAAeC,EAAaK,KAGhC,OACI,iCACI,kBAAC,EAAD,CAAanC,UAAWV,IAAO8C,YAAab,OAAQc,IAAgBhB,KAAK,UACzE,wBAAIrB,UAAWV,IAAOgD,OAAtB,QAEI,0BAAMtC,UAAWV,IAAOiD,OAAQC,QAAS,kBAAMN,EAAmB,eAAlE,KACA,mCAHJ,MAKI,0BAAMlC,UAAWV,IAAOiD,OAAQC,QAAS,kBAAMN,EAAmB,eAAlE,KACA,0BAAMlC,UAAWV,IAAOiD,OAAQC,QAAS,kBAAMN,EAAmB,gBAAlE,KANJ,KASA,yBAAKlC,UAAWV,IAAOmD,UACvB,uBAAGzC,UAAWV,IAAOoD,aAAcd,K,iBCnBhCe,EAbH,SAAAjB,GACV,OACE,kBAAC,IAAD,KACE,yBAAK1B,UAAWV,IAAOsD,KACrB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,UCFUC,QACW,cAA7BC,OAAOxD,SAASyD,UAEe,UAA7BD,OAAOxD,SAASyD,UAEhBD,OAAOxD,SAASyD,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAACR,EAAD,MAASS,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEpInB3E,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,cAAgB,iCAAiC,YAAc,+BAA+B,aAAe,gCAAgC,QAAU,2BAA2B,YAAc,+BAA+B,OAAS,4B,kBCA3RD,EAAOC,QAAU,CAAC,oBAAsB,mDAAmD,kBAAoB,iDAAiD,WAAa,0CAA0C,oBAAsB,mDAAmD,cAAgB,6CAA6C,eAAiB,iD","file":"static/js/main.cf52c6b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavigationItem_NavItem__1jh3X\",\"CurrentPage\":\"NavigationItem_CurrentPage__1nozk\",\"NavText\":\"NavigationItem_NavText__3zh_1\",\"NavItemImage\":\"NavigationItem_NavItemImage__1lQpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoImage\":\"ProfileLogo_LogoImage__313fG\"};","module.exports = __webpack_public_path__ + \"static/media/PortfolioSelfPic.63e13bf5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2URQW\"};","import React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nimport styles from './NavigationItem.module.css';\r\n\r\nconst NavigationItem = props => {\r\n    let navItemStyle = [styles.NavItem];\r\n    if(props.location.pathname === props.link) navItemStyle.push(styles.CurrentPage);\r\n    return (\r\n        <Link style={{ textDecoration: 'none'}} to={props.link}>\r\n            <div className={navItemStyle.join(' ')}>\r\n                <i className={[\"material-icons\", styles.NavItemImage].join(' ')}>{props.iconType}</i>\r\n                <p className={styles.NavText}>{props.itemName}</p>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavigationItem);","import React from 'react';\r\n\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\nimport styles from './VerticalNavigationBar.module.css';\r\n\r\nconst VerticalNavigationBar = props => {\r\n    return (\r\n        <div className={styles.NavigationContainer}>\r\n            <div className={styles.MenuButtonContainer}>\r\n                <i className={[\"material-icons\", styles.MenuButton].join(' ')}>menu</i>\r\n                <svg width=\"40\" height=\"40\">\r\n                    <circle className={styles.OutlineCircle} r=\"19\" cx=\"20\" cy=\"20\" fill=\"transparent\"/>\r\n                    <circle className={styles.ProgressCircle} r=\"19\" cx=\"20\" cy=\"20\" fill=\"transparent\"/>\r\n                </svg> \r\n            </div>\r\n            <div className={styles.NavigationDivider} />\r\n            <NavigationItem iconType=\"perm_identity\" itemName=\"About\" link=\"/\"/>\r\n            <NavigationItem iconType=\"view_comfy\" itemName=\"Work\" link=\"/work\"/>\r\n            <NavigationItem iconType=\"speaker_notes\" itemName=\"Contact\" link=\"/contact\"/>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerticalNavigationBar;","import React from 'react';\r\n\r\nimport styles from './ProfileLogo.module.css';\r\n\r\nconst ProfileLogo = props => {\r\n    const sizeStyle = {\r\n        height: props.size, \r\n        width: props.size, \r\n        backgroundImage: `url(${props.source})`,\r\n    };\r\n\r\n    return (\r\n        <div className={[styles.LogoImage, props.className].join(\" \")} style={sizeStyle}/>\r\n    );\r\n}\r\n\r\nexport default ProfileLogo;","import React, { useState } from 'react';\r\n\r\nimport ProfileLogo from '../../components/ProfileLogo/ProfileLogo';\r\n\r\nimport profilePicture from '../../assets/PortfolioSelfPic.jpg';\r\n\r\nimport styles from './AboutPage.module.css';\r\n\r\nconst AboutPage = _ => {\r\n    const [currentText, setCurrentText] = useState(\"Click/Hover over one of the highlighted letters in my name to learn more about me!\");\r\n    \r\n    const wordDescDict = {\r\n        Adaptable: `Adaptable. As a developer, I want to be able to make and maintain a product from the ground\r\n            up. This means being able to adapt to new technologies and languages. I am quick and eager to learn \r\n            new things and I am always willing to expand upon my existing knowledge to create something exciting\r\n            and new!`,\r\n        Efficient: `Efficient. I am a huge believer of making sure that code I write is as simple and clean as possible. \r\n            I usually have to rethink a solution a couple times over to make sure that I am organized, \r\n            efficient in all aspects, and that revisiting it later on won't be a pain to deal with.`,\r\n        Passionate: `Passionate. I love doing what I do! It is nice to be challenged once in a while, \r\n            and I always put in my best effort when working on a project!`\r\n    }\r\n\r\n    const letterClickHandler = (word) => {\r\n        setCurrentText(wordDescDict[word]);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <ProfileLogo className={styles.SelfPicture} source={profilePicture} size=\"10rem\"/>\r\n            <h1 className={styles.Title}>\r\n                Joshu\r\n                <span className={styles.Letter} onClick={() => letterClickHandler(\"Adaptable\")}>a</span>\r\n                <span> </span>\r\n                Jos\r\n                <span className={styles.Letter} onClick={() => letterClickHandler(\"Efficient\")}>e</span>\r\n                <span className={styles.Letter} onClick={() => letterClickHandler(\"Passionate\")}>p</span>\r\n                h\r\n            </h1>\r\n            <div className={styles.Divider} />\r\n            <p className={styles.Description}>{currentText}</p>\r\n        </section> \r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport VerticalNavigationBar from './components/VerticalNavigationBar/VerticalNavigationBar';\r\nimport AboutPage from './containers/AboutPage/AboutPage';\r\n\r\nimport styles from './App.module.css';\r\n\r\nconst app = _ => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={styles.App}>\r\n        <VerticalNavigationBar/>\r\n        <Route path=\"/\" exact>\r\n          <AboutPage/>\r\n        </Route>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default app;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"AboutPage_Title__2eQFD\",\"slideFromLeft\":\"AboutPage_slideFromLeft__3dz9o\",\"SelfPicture\":\"AboutPage_SelfPicture__2dNnC\",\"slideFromTop\":\"AboutPage_slideFromTop__18a-G\",\"Divider\":\"AboutPage_Divider__28dvA\",\"Description\":\"AboutPage_Description__2QnUn\",\"Letter\":\"AboutPage_Letter__rhs6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationContainer\":\"VerticalNavigationBar_NavigationContainer__3Kb1I\",\"NavigationDivider\":\"VerticalNavigationBar_NavigationDivider__2r9em\",\"MenuButton\":\"VerticalNavigationBar_MenuButton__1ZaTB\",\"MenuButtonContainer\":\"VerticalNavigationBar_MenuButtonContainer__2n-JE\",\"OutlineCircle\":\"VerticalNavigationBar_OutlineCircle__1e9yU\",\"ProgressCircle\":\"VerticalNavigationBar_ProgressCircle__3_Gab\"};"],"sourceRoot":""}